{
	"info": {
		"_postman_id": "4e9d1bb4-f503-4110-8865-632d4715ea30",
		"name": "exec_crud_normal",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get_main",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "skip",
							"value": "0",
							"type": "text"
						},
						{
							"key": "limit",
							"value": "10",
							"type": "text"
						},
						{
							"key": "search_by",
							"value": "{ \"title\": \"Sample title\"}",
							"type": "text"
						},
						{
							"key": "Consumbtion",
							"value": "const express = require('express');\nconst app = express();\nconst fileUpload = requconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});const express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nire('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = requconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});const express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nire('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\nappconst express = require('express');\nconst app = express();\nconst fileUpload = requconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});const express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nire('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n",
							"type": "text",
							"disabled": true
						},
						{
							"key": "Consumbtion",
							"value": "const express = require('express');\nconst app = express();\nconst fileUpload = requconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});const express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nire('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000?",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"query": [
						{
							"key": "skip",
							"value": "1",
							"description": "optional",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "100",
							"description": "optional",
							"disabled": true
						},
						{
							"key": "search_by",
							"value": "{ \"title\":\"Sample title\"}",
							"description": "optional",
							"disabled": true
						},
						{
							"key": "Consumbtion",
							"value": "const express = require('express');\nconst app = express();\nconst fileUpload = requconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});const express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nire('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Tar Line by line",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "path",
							"value": "file.tar.gz",
							"type": "text"
						},
						{
							"key": "skip",
							"value": "0",
							"type": "text"
						},
						{
							"key": "limit",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/read",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"read"
					]
				}
			},
			"response": []
		},
		{
			"name": "File + Data",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "data",
							"value": "{\"specify\" : \"42.txt\", \"title\":\"Sample title\",\"description\":\"Sample Description\",\"expire\":\"2019-03-28T13:53:39.393Z\"}\n",
							"description": "if (data.specify) - changes filename",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": ""
						},
						{
							"key": "ddd",
							"value": "const express = require('express');\nconst app = express();\nconst fileUpload = requconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});const express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nire('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = requconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});const express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nire('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\nappconst express = require('express');\nconst app = express();\nconst fileUpload = requconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});const express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nconst express = require('express');\nconst app = express();\nconst fileUpload = require('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\nire('express-fileupload');\nconst expressValidator = require('express-validator');\nconst helmet = require('helmet');\nconst mongoose = require('mongoose');\nconst path = require('path');\n\nconst fileController = require('./controllers/fileController');\n\nmongoose.set('useFindAndModify', false);\nmongoose.set('useCreateIndex', true);\nmongoose.set('useNewUrlParser', true);\n// .env module for WebStorm didn't work. resolve this later.\nmongoose.connect(process.env.DB_URI || 'mongodb://localhost:27017/Tar');\nmongoose.connection.on('error', (err) => {\n  console.error(err);\n  console.log(\n      '%s MongoDB connection error. Please make sure MongoDB is running.'\n  );\n  process.exit();\n});\n\napp.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n.use(helmet());\napp.use(express.json({limit: '1kb'}));\napp.use(express.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(fileUpload({\n  limits: {fileSize: 5000 * 1024 * 1024},\n  useTempFiles: true,\n  tempFileDir: '/tmp',\n  parseNested: true,\n  abortOnLimit: true,\n}));\n\napp.use('/tar', express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\n\napp.get('/', fileController.index);\napp.post('/', fileController.upload);\napp.get('/tar', fileController.read);\n\napp.use(function(req, res, next) {\n  res.redirect('/');\n});\n\napp.listen(3000);\n",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		}
	]
}